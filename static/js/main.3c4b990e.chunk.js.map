{"version":3,"sources":["components/contacts/contacts.module.css","components/logo/logo.module.css","components/filter/filter.module.css","components/contactForm/contactForm.module.css","components/warningAlert/warningAlert.module.css","components/contactItem/contactItem.jsx","components/contacts/contacts.jsx","components/contactForm/contactForm.jsx","components/filter/filter.jsx","components/logo/logo.jsx","components/warningAlert/warningAlert.jsx","components/APP.jsx","index.js"],"names":["module","exports","ContactItem","contact","id","name","number","removeContact","className","styles","item","btn","type","onClick","itemsStyles","enter","enterActive","exit","exitActive","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","ContactForm","state","change","e","target","value","setState","inputSubmit","preventDefault","props","addContact","this","onSubmit","form","formBlock","label","inpt","onChange","Component","Filter","changeFilter","searchBlock","logoStyles","appear","appearActive","Logo","in","unmountOnExit","alertStyles","Warn","title","alert","alertDanger","alertCustom","APP","filter","showAlert","message","clearTimeout","alertTimeoutHandle","setTimeout","contactAdd","quest","ques","includes","uuidv4","prevent","onFilter","getContacts","toLowerCase","delContacts","contactForId","localStorage","getItem","parsedContacts","JSON","parse","prevState","nextContacts","setItem","stringify","recorderContact","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3c4b990e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__XZ1HF\",\"item\":\"contacts_item__hmp5I\",\"btn\":\"contacts_btn__2xhgc\",\"enter\":\"contacts_enter__3o-cY\",\"enterActive\":\"contacts_enterActive__2h2m1\",\"exit\":\"contacts_exit__1_2Wh\",\"exitActive\":\"contacts_exitActive__3jcB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__QP2RI\",\"appear\":\"logo_appear__1OhR4\",\"appearActive\":\"logo_appearActive__d5tiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBlock\":\"filter_searchBlock__3uk2j\",\"searchInpt\":\"filter_searchInpt__3Ff2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3XYfe\",\"formBlock\":\"contactForm_formBlock__3Co_P\",\"label\":\"contactForm_label__1zBfE\",\"inpt\":\"contactForm_inpt__3Ke6i\",\"btn\":\"contactForm_btn__I1dQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"warningAlert_appear__3VutK\",\"appearActive\":\"warningAlert_appearActive__RaOft\",\"exit\":\"warningAlert_exit__1qr-n\",\"exitActive\":\"warningAlert_exitActive__1NGjs\",\"alertCustom\":\"warningAlert_alertCustom__3DsAS\",\"alert\":\"warningAlert_alert__YuPxN\",\"alertDanger\":\"warningAlert_alertDanger__39NqX\"};","import React from 'react';\r\nimport styles from '../contacts/contacts.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst ContactItem = \r\n    ({ contact: { id, name, number }, removeContact }) => {\r\n        return(\r\n            <li className={styles.item}>\r\n            {name}: {number}\r\n            {<button className={styles.btn} type=\"button\" name=\"delete\" onClick={() => removeContact(id)}>Delete</button>}\r\n        </li>\r\n        );\r\n    };\r\n\r\nContactItem.propTypes = {\r\n    removeContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n      \r\nexport default ContactItem;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ContactItem from '../contactItem/contactItem'\r\nimport styles from './contacts.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst itemsStyles = {\r\n    enter: styles.enter,\r\n    enterActive: styles.enterActive,\r\n    exit: styles.exit,\r\n    exitActive: styles.exitActive,\r\n}\r\n\r\nconst ContactList = ({contacts, removeContact}) => (\r\n    <TransitionGroup component=\"ul\">\r\n       {contacts.map((contact) => (\r\n        <CSSTransition key={contact.id} timeout={250} classNames={itemsStyles}>\r\n           <ContactItem contact={contact} removeContact={removeContact} />\r\n        </CSSTransition>\r\n       ))} \r\n    </TransitionGroup>\r\n);  \r\n\r\nContactList.propTypes = {\r\n    removeContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n    })),\r\n}\r\n\r\nexport default ContactList;\r\n","import React, {Component} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './contactForm.module.css'\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n      };\r\n\r\n    change = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name] : value,\r\n        });\r\n    };\r\n    \r\n    inputSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addContact({ ...this.state});\r\n        this.setState ({name: \"\", number: \"\"});\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.inputSubmit} className={styles.form}> \r\n                <div className={styles.formBlock}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}     \r\n                            onChange={this.change}   \r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.change}\r\n                    />\r\n                </label>\r\n                </div>\r\n                <button className={styles.btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    addContact: propTypes.func.isRequired,\r\n    // name: propTypes.string.isRequired,\r\n    // number: propTypes.string.isRequired,\r\n  };","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nexport default function Filter ({value, changeFilter}) {\r\n    return (\r\n        <div className={styles.searchBlock}>\r\n            Find contacts by name\r\n            <input  type=\"text\" value={value} onChange = {(e) => changeFilter(e.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: propTypes.string.isRequired,\r\n    changeFilter: propTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './warningAlert.module.css';\r\n\r\nconst alertStyles= {\r\n    appear: styles.appear,\r\n    appearActive: styles.appearActive,\r\n    exit: styles.exit,\r\n    exitActive: styles.exitActive,\r\n  };\r\n\r\n  const Warn = ({title}) => (\r\n    <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={250}\r\n    classNames={alertStyles}\r\n    unmountOnExit\r\n  >\r\n    <div className={(styles.alert, styles.alertDanger, styles.alertCustom)}>\r\n      {title}\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Warn;","import React, {Component} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contacts/contacts';\r\nimport ContactForm from './contactForm/contactForm';\r\nimport Filter from './filter/filter';\r\nimport { Logo } from './logo/logo';\r\nimport  './app/app.module.css';\r\nimport Warn from './warningAlert/warningAlert';\r\n\r\nexport default class APP extends Component {\r\n    static alertTimeoutHandle = 0;\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n        alert: '',\r\n    };\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n    \r\n        if (parsedContacts) {\r\n          this.setState({ contacts: parsedContacts });\r\n        }\r\n    }\r\n    componentDidUpdate(prevState) {\r\n        const nextContacts = this.state.contacts;\r\n        const prevContacts = prevState.contacts;\r\n    \r\n        if (nextContacts !== prevContacts) {\r\n          localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n        }\r\n    }\r\n    showAlert = message => {\r\n        this.setState({ alert: message });\r\n        clearTimeout(this.alertTimeoutHandle);\r\n        this.alertTimeoutHandle = setTimeout(() => {\r\n          this.setState({ alert: '' });\r\n        }, 3000);\r\n      };\r\n\r\n    contactAdd = (quest) => {\r\n        const searchName = this.state.contacts.map((ques) => ques.name).includes(quest.name);\r\n        if (searchName) {\r\n            this.showAlert(`${quest.name} already exists`);\r\n        } else {\r\n            const contact = {\r\n                ...quest, id: uuidv4(),\r\n            };\r\n            \r\n            this.setState((prevent) =>({\r\n                contacts: [...prevent.contacts, contact],\r\n            }));\r\n        }   \r\n    }; onFilter = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    getContacts = () => {\r\n        const {contacts, filter} = this.state;\r\n        return contacts.filter((contacts) =>\r\n        contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    };\r\n\r\n    delContacts = (contactForId) => {\r\n        this.setState((prevent) =>{\r\n            return {\r\n                contacts: prevent.contacts.filter(({id}) => id !== contactForId),\r\n            };\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const recorderContact = this.getContacts();\r\n        const {filter, alert} = this.state;\r\n        return (\r\n            <div>\r\n                <Logo/> {alert && <Warn title={alert}/>}<ContactForm addContact = {this.contactAdd}/>\r\n                <h2>Contacts</h2>\r\n                {(<Filter value={filter} changeFilter={this.onFilter}/>)}\r\n                {recorderContact.length > 0 && (<ContactList contacts = {recorderContact} removeContact = {this.delContacts}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport APP from './components/APP';\r\n\r\nReactDOM.render(<APP/>, document.querySelector('#root'));\r\n\r\n"],"sourceRoot":""}